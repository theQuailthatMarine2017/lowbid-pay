exports.generate = function(environment,consumerKey,consumerSecret) {

    var unirest = require("unirest");

    if(environment === 'production' || environment === 'PRODUCTION'){

        console.log('Mpesa API Auth Bearer [Token] Generator');
        console.log('*****************************');
        console.log('* Fetching Bearer Token For Production');
        var req = unirest("GET", "https://api.safaricom.co.ke/oauth/v1/generate");
        let data = consumerKey+':'+consumerSecret;
        let base64string = Buffer.from(data, 'utf-8').toString('base64');

            req.query({
             "grant_type": "client_credentials"
            });
            
            req.headers({
             "Authorization": `Basic ${base64string}`
            });
            
            req.end(res => {
             if (res.error) throw new Error(res.error);
            // fn({code: res.body.access_token, expire: Math.floor(res.body.expires_in / 60)});
                console.log("Your Bearer Auth Token Is: "+ res.body.access_token+ `\nToken Expires After: ${Math.floor(res.body.expires_in / 60)} Minutes`+ "\n\n****************");
            });

    }else{

        console.log('Mpesa API Auth Bearer [Token] Generator');
        console.log('*****************************');
        console.log('* Fetching Bearer Token For Sandbox');
        var req = unirest("GET", "https://sandbox.safaricom.co.ke/oauth/v1/generate");
        let data = consumerKey+':'+consumerSecret;
        let base64string = Buffer.from(data, 'utf-8').toString('base64');

        req.query({
             "grant_type": "client_credentials"
            });
            
            req.headers({
             "Authorization": `Basic ${base64string}`
            });
            
            req.end(res => {
             if (res.error) throw new Error(res.error);

            // fn({code: res.body.access_token, expire: Math.floor(res.body.expires_in / 60)});
                console.log("Your Bearer Auth Token Is: "+ res.body.access_token+ `\nToken Expires After: ${Math.floor(res.body.expires_in / 60)} Minutes`+ "\n\n****************");
            });
    }
}